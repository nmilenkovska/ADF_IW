{
	"name": "natasha_df_02",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "natasha_blob_adf",
						"type": "DatasetReference"
					},
					"name": "leads"
				},
				{
					"dataset": {
						"referenceName": "natasha_blob_adf",
						"type": "DatasetReference"
					},
					"name": "incomes"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "natasha_blob_adf",
						"type": "DatasetReference"
					},
					"name": "output"
				}
			],
			"transformations": [
				{
					"name": "JoinLeadsWithIncomes",
					"description": "Inner join on 'leads' and 'incomes'"
				},
				{
					"name": "SanFrancisco"
				},
				{
					"name": "SelectParticularColumns"
				}
			],
			"scriptLines": [
				"parameters{",
				"     file_name1 as string ('leads.csv'),",
				"     file_name2 as string ('CAIncommesByZip.csv'),",
				"     output_file as string ('output.csv')",
				"}",
				"source(output(",
				"          First as string,",
				"          Last as string,",
				"          Phone_h as string,",
				"          Phone_m as string,",
				"          Phone_w as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          Zip as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false,",
				"     wildcardPaths:[($file_name1)]) ~> leads",
				"source(output(",
				"          Zip as string,",
				"          LessThan10K as double,",
				"          MoreThan10K as double,",
				"          MoreThan25K as double,",
				"          {MoreThan50K } as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     wildcardPaths:[($file_name2)]) ~> incomes",
				"leads, incomes join(leads@Zip == incomes@Zip,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinLeadsWithIncomes",
				"SelectParticularColumns filter(City=='San Francisco') ~> SanFrancisco",
				"JoinLeadsWithIncomes select(mapColumn(",
				"          First,",
				"          Last,",
				"          City,",
				"          LessThan10K,",
				"          MoreThan10K,",
				"          MoreThan25K,",
				"          {MoreThan50K }",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectParticularColumns",
				"SanFrancisco sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[($output_file)],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> output"
			]
		}
	}
}